name: Build and release android app

on:
  push:
    tags:
      - "android-release-v*"

defaults:
  run:
    working-directory: android-app

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run check
        run: |
          npm install
          npm run check
          npm run lint

  build-and-release:
    needs: check

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set java sdk
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install npm dependencies
        run: |
          npm install

      - name: Build Android apk
        run: |
          cd android
          echo "${{ secrets.ANDROID_RELEASE_KEY }}" | LC_ALL=C tr -cd 0-9a-fA-F | xxd -r -p > ./app/${{ secrets.ANDROID_RELEASE_STORE_FILE }}
          echo "MYAPP_RELEASE_STORE_FILE=${{ secrets.ANDROID_RELEASE_STORE_FILE }}" >> keystore.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.ANDROID_RELEASE_KEY_ALIAS }}" >> keystore.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.ANDROID_RELEASE_STORE_PASSWORD }}" >> keystore.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}" >> keystore.properties
          bash ./gradlew assembleRelease --stacktrace

      - name: Release
        run: |
          set -x
          assets=()
          for asset in ./android/app/build/outputs/apk/release/*.apk; do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
